namespace Loops;

///  При написании скриптов зачастую встаёт задача сделать однотипное действие много раз.
///  Например, вывести товары из списка один за другим.
///  Или просто перебрать все числа от 1 до 10 и для каждого выполнить одинаковый код.
///  Для многократного повторения одного участка кода предусмотрены циклы (loops).
///  
///  Циклы бывают нескольких типов, здесь мы рассмотрим цикл while
class WhileLoop
{
  void whileLoop()
  {
    ///  Цикл while имеет следующий синтаксис:

    // while (условие)
    // {
    //   код,
    //   также называемый "телом цикла"
    // }

    /// Код из тела цикла выполняется, пока условие истинно.
    /// Например, цикл ниже выводит i, пока i < 3:
    int i = 0;
    while (i < 3)
    { // выводит 0, затем 1, затем 2
      Console.WriteLine(i);
      i++;
    }
    /// Одно выполнение тела цикла по-научному называется итерация.
    /// Цикл в примере выше совершает три итерации.
    /// Если бы строка i++ отсутствовала в примере выше, то цикл бы повторялся вечно.
  }

  void doWhileLoop()
  {
    /// Проверку условия можно разместить под телом цикла,
    /// используя специальный синтаксис do ..while:

    // do
    // {
    //   тело цикла
    // } while (условие);

    /// Цикл сначала выполнит тело, а затем проверит условие condition,
    /// и пока его значение равно true, он будет выполняться снова и снова:
    int i = 0;
    do
    {
      Console.WriteLine(i);
      i++;
    } while (i < 3);
    /// Такая форма синтаксиса оправдана, если вы хотите, чтобы тело цикла выполнилось хотя бы один раз, даже если условие окажется ложным.
    /// На практике чаще используется форма с предусловием:
    /// while (условие) { тело цикла }
  }
}