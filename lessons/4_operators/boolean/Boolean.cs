namespace Lesson4Basic;

/// Логические операторы.
/// к ним относятся "&&", "||" и "!"
class Boolean {
  void booleanAnd() {
    /// оператор "&&" называется логическим умножением,
    /// еще его называют "логическое и"
    /// 
    /// этот бинарный оператор применяется только к булевым типам
    /// и возвращает тоже bool.
    bool example = true && false; // вернет false

    /// его логика такая:
    /// если первый операнд (слева от &&) равен false,
    ///   тогда оператор немедленно возвращает false (не переходя ко второму операнду);
    /// если же первый операнд равен true,
    ///   тогда оператор переходит ко второму операнду и возвращает его значение.
    ///   пример:
    bool example2 = true && true && false && true;
    /// здесь у нас есть три оператора &&
    /// 1) сначала выполняется первый &&: true && true
    ///   т.к. первый и второй операнды true, то он возвращает значение true
    ///   остается: bool example2 = true && false && true;
    /// 2) теперь выполняется следующий &&: true && false;
    ///   здесь первый операнд равен true, значит переходим ко второму операнду;
    ///   второй операнд равен false, значит результат true && false будет false;
    ///   остается: bool example2 = false && true;
    /// 3) теперь выполняется следующий &&: false && true;
    ///   здесь первый операнд равен false, значит сразу возвращается false,
    ///   и выполнение не переходит ко второму операнду.
    /// в итоге в переменной example2 будет значение false;
    /// 
    /// Вот как запомнить это легче:
    /// оператор && возвращает первый попавшийся false
    /// (как только нашел false - тут же вернул его и завершил свою работу)
  }

  void booleanOr() {
    /// оператор "||" называется логическим сложением,
    /// еще его называют "логическое или"
    ///
    /// Он работает похоже на &&, но вместо первого false он ищет первый true
    /// Пример:
    bool example = true || false || true || false; // результат будет true
    /// Здесь у нас три оператора "||"
    /// 1) Выполняется true || false
    ///   оператор || смотрит на первый операнд, видит что он true и возвращает его.
    ///   дальше выполнение не идет. остается:
    ///   bool example = true;
  }

  void booleanNot() {
    /// оператор "!" называется логическим отрицанием,
    /// его еще называют "логическое не"
    /// Он "переворачивает" значение: из true делает false, и наоборот.
    /// 
    /// Этот оператор унарный - то есть применяется к одному операнду
    /// Пример:
    bool example = !true; // вернет false
  }
}